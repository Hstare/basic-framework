# 开发环境
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hw?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: root
    #    platform: mysql
    sql-script-encoding: UTF-8
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initial-size: 5
    min-idle: 5
    max-active: 20
    # 配置获取连接等待超时的时间
    max-wait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    min-evictable-idle-time-millis: 300000
    validation-query: SELECT 1 FROM DUAL
    test-while-idle: true
    test-on-borrow: false
    test-on-return: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    pool-prepared-statements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    max-pool-prepared-statement-per-connection-size: 20
    filters: stat,wall
    use-global-data-source-stat: true
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  redis:
    host: 127.0.0.1
    port: 6379
    password:
#    lettuce:    # lettuce默认值也为下面的配置值,可以注释掉
#      pool:
#        max-active: 8
#        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
#        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
#        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
#      shutdown-timeout: 100ms


swagger:
  enable: true
  application-name: 投资后评价与网络建设成本系统支撑
  application-version: 3.0.0
  application-description: 投资后评价与网络建设成本系统支撑描述
  try-host: http://localhost:${server.port}